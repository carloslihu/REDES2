.TH "/home/javier/Escritorio/Redes/G-2301-05-P3/src/G-2301-05-P2-xchat2.c" 3 "Sun May 7 2017" "Redes2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/javier/Escritorio/Redes/G-2301-05-P3/src/G-2301-05-P2-xchat2.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <redes2/ircxchat\&.h>\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P1-socket\&.h'\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P2-audio\&.h'\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P1-tools\&.h'\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P1-types\&.h'\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P1-commands\&.h'\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P2-userCommands\&.h'\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P2-userTools\&.h'\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P2-basicCommandsFromServer\&.h'\fP
.br
\fC#include '\&.\&./includes/G-2301-05-P2-repliesFromServer\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBthreadSendArgs\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef long int(* \fBpFuncs\fP )(char *strin)"
.br
.ti -1c
.RI "typedef long int(* \fBpUserFuncs\fP )(int socket, char *strin)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBIRCInterface_ActivateChannelKey\fP (char *channel, char *key)"
.br
.ti -1c
.RI "void \fBIRCInterface_ActivateExternalMessages\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_ActivateInvite\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_ActivateModerated\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_ActivateNicksLimit\fP (char *channel, int limit)"
.br
.ti -1c
.RI "void \fBIRCInterface_ActivatePrivate\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_ActivateProtectTopic\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_ActivateSecret\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_BanNick\fP (char *channel, char *nick)"
.br
.ti -1c
.RI "void * \fBwhoThread\fP (void *args)"
.br
.ti -1c
.RI "void * \fBclientThread\fP (void *args)"
.br
.ti -1c
.RI "long \fBIRCInterface_Connect\fP (char *nick, char *user, char *realname, char *password, char *server, int port, boolean ssl)"
.br
.ti -1c
.RI "void \fBIRCInterface_DeactivateChannelKey\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_DeactivateExternalMessages\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_DeactivateInvite\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_DeactivateModerated\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_DeactivateNicksLimit\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_DeactivatePrivate\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_DeactivateProtectTopic\fP (char *channel)"
.br
.ti -1c
.RI "void \fBIRCInterface_DeactivateSecret\fP (char *channel)"
.br
.ti -1c
.RI "boolean \fBIRCInterface_DisconnectServer\fP (char *server, int port)"
.br
.ti -1c
.RI "boolean \fBIRCInterface_ExitAudioChat\fP (char *nick)"
.br
.ti -1c
.RI "void \fBIRCInterface_GiveOp\fP (char *channel, char *nick)"
.br
.ti -1c
.RI "void \fBIRCInterface_GiveVoice\fP (char *channel, char *nick)"
.br
.ti -1c
.RI "void \fBIRCInterface_KickNick\fP (char *channel, char *nick)"
.br
.ti -1c
.RI "void \fBIRCInterface_NewCommandText\fP (char *command)"
.br
.ti -1c
.RI "void \fBIRCInterface_NewTopicEnter\fP (char *topicdata)"
.br
.ti -1c
.RI "void * \fBthreadSend\fP (void *args)"
.br
.RI "\fIrutina que se encarga del envio de ficheros siguiendo un 'protocolo' particular de este cliente este protocolo funciona de la siguiente manera: primero se envia un privmsg a quien deseemos enviar un fichero (en adelante, el receptor) este privmsg tendra la siguiente forma: \\002FSEND \\001<<filename>>\\001 <<hostname>> <<port>> <<length>> -donde \\002 es un caracter no imprimible que indica que es un privmsg especial que declara que se desea enviar un fichero -los \\001 son tambien caracteres no imprimibles que indican el comienzo y final del nombre del fichero a enviar -<<filename>> es el nombre del fichero a enviar (puede contener espacios) -<<hostname>> es el nombre dns de quien desea enviar el fichero (en adelante, el emisor) -<<port>> es un entero donde se indica el puerto al que el receptor debera conectarse para recibir el fichero -<<length>> es la longitud del fichero una vez que el receptor haya recibido este mensaje, obtendra los datos del mismo y mediante un prompt, el usuario receptor decidira si quiere o no recibir este fichero\&. La respuesta a este prompt se enviara a traves de la conexion declarada en el privmsg (hostname + port) en caso de respuesta negativa, esta conexion se acaba para ambas partes\&. en caso de respuesta afirmativa, el emisor procede a enviar todos los datos del fichero mediante la conexcion declarada por su parte, el receptor reconstruira el fichero con los datos que el emisor envie una vez acabada la transmision, ambas partes cierran la conexion \fP"
.ti -1c
.RI "boolean \fBIRCInterface_SendFile\fP (char *filename, char *nick, char *data, long unsigned int length)"
.br
.ti -1c
.RI "void * \fBthreadRecord\fP (void *aux)"
.br
.RI "\fIrutina que maneja el hilo que graba la voz del emisor en un envio de audio \fP"
.ti -1c
.RI "boolean \fBIRCInterface_StartAudioChat\fP (char *nick)"
.br
.ti -1c
.RI "boolean \fBIRCInterface_StopAudioChat\fP (char *nick)"
.br
.ti -1c
.RI "void \fBIRCInterface_TakeOp\fP (char *channel, char *nick)"
.br
.ti -1c
.RI "void \fBIRCInterface_TakeVoice\fP (char *channel, char *nick)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBpFuncs\fP \fBfuncts\fP [IRC_MAX_COMMANDS]"
.br
.ti -1c
.RI "\fBpUserFuncs\fP \fBuserFuncts\fP [IRC_MAX_USER_COMMANDS]"
.br
.ti -1c
.RI "char * \fBmiNick\fP"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef long int(* pFuncs)(char *strin)"

.PP
Definition at line 18 of file G-2301-05-P2-xchat2\&.c\&.
.SS "typedef long int(* pUserFuncs)(int socket, char *strin)"

.PP
Definition at line 19 of file G-2301-05-P2-xchat2\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void* clientThread (void *args)"

.PP
Definition at line 445 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_ActivateChannelKey (char *channel, char *key)"

.PP
Definition at line 76 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_ActivateExternalMessages (char *channel)"

.PP
Definition at line 118 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_ActivateInvite (char *channel)"

.PP
Definition at line 158 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_ActivateModerated (char *channel)"

.PP
Definition at line 198 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_ActivateNicksLimit (char *channel, intlimit)"

.PP
Definition at line 241 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_ActivatePrivate (char *channel)"

.PP
Definition at line 284 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_ActivateProtectTopic (char *channel)"

.PP
Definition at line 324 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_ActivateSecret (char *channel)"

.PP
Definition at line 365 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_BanNick (char *channel, char *nick)"

.PP
Definition at line 408 of file G-2301-05-P2-xchat2\&.c\&.
.SS "long IRCInterface_Connect (char *nick, char *user, char *realname, char *password, char *server, intport, booleanssl)"

.PP
Definition at line 527 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_DeactivateChannelKey (char *channel)"

.PP
Definition at line 615 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_DeactivateExternalMessages (char *channel)"

.PP
Definition at line 656 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_DeactivateInvite (char *channel)"

.PP
Definition at line 696 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_DeactivateModerated (char *channel)"

.PP
Definition at line 736 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_DeactivateNicksLimit (char *channel)"

.PP
Definition at line 776 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_DeactivatePrivate (char *channel)"

.PP
Definition at line 818 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_DeactivateProtectTopic (char *channel)"

.PP
Definition at line 858 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_DeactivateSecret (char *channel)"

.PP
Definition at line 898 of file G-2301-05-P2-xchat2\&.c\&.
.SS "boolean IRCInterface_DisconnectServer (char *server, intport)"

.PP
Definition at line 942 of file G-2301-05-P2-xchat2\&.c\&.
.SS "boolean IRCInterface_ExitAudioChat (char *nick)"

.PP
Definition at line 982 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_GiveOp (char *channel, char *nick)"

.PP
Definition at line 1020 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_GiveVoice (char *channel, char *nick)"

.PP
Definition at line 1062 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_KickNick (char *channel, char *nick)"

.PP
Definition at line 1103 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_NewCommandText (char *command)"

.PP
Definition at line 1146 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_NewTopicEnter (char *topicdata)"

.PP
Definition at line 1197 of file G-2301-05-P2-xchat2\&.c\&.
.SS "boolean IRCInterface_SendFile (char *filename, char *nick, char *data, long unsigned intlength)"

.PP
Definition at line 1338 of file G-2301-05-P2-xchat2\&.c\&.
.SS "boolean IRCInterface_StartAudioChat (char *nick)"

.PP
Definition at line 1448 of file G-2301-05-P2-xchat2\&.c\&.
.SS "boolean IRCInterface_StopAudioChat (char *nick)"

.PP
Definition at line 1489 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_TakeOp (char *channel, char *nick)"

.PP
Definition at line 1527 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void IRCInterface_TakeVoice (char *channel, char *nick)"

.PP
Definition at line 1568 of file G-2301-05-P2-xchat2\&.c\&.
.SS "int main (intargc, char *argv[])"
MMMMMMMMMM MMMMM AAAAAAA IIIIIII NNNNNNNNNN NNNNNN MMMMMMMMMM MMMMM AAAAAAAA IIIII NNNNNNNNNN NNNN MMMMM MMMM MM MM AAAAA AA III NNNNN NNNN NN MMMMM MMMM MM MM AAAAA AA III NNNNN NNNN NN MMMMM MMMM MM MM AAAAA AA III NNNNN NNNN NN MMMMM MMMM MM MM AAAAA AA III NNNNN NNNN NN MMMMM MMMM MM MM AAAAA AA III NNNNN NNNN NN MMMMM MMMM MM MM AAAAAAAAAAAAAA III NNNNN NNNN NN MMMMM MMMMM MM AAAAA AA III NNNNN NNNN NN MMMMM MMM MM AAAAA AA III NNNNN NNNN NN MMMMM MM AAAAA AA III NNNNN NNNN NN MMMMM MM AAAAA AA III NNNNN NNNN NN MMMMMMM MMMM AAAAAA AAAA IIIII NNNNNN NNNNNNN MMMMMMMMM MMMMMM AAAAAAAA AAAAAA IIIIIII NNNNNNN NNNNNNN 
.PP
Definition at line 1602 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void* threadRecord (void *aux)"

.PP
rutina que maneja el hilo que graba la voz del emisor en un envio de audio 
.PP
\fBParameters:\fP
.RS 4
\fIargs\fP los argumentos que el hilo requiere\&. Como no requiere ninguno, este parametro puede ser NULL
.RE
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP

.PP
Definition at line 1360 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void* threadSend (void *args)"

.PP
rutina que se encarga del envio de ficheros siguiendo un 'protocolo' particular de este cliente este protocolo funciona de la siguiente manera: primero se envia un privmsg a quien deseemos enviar un fichero (en adelante, el receptor) este privmsg tendra la siguiente forma: \\002FSEND \\001<<filename>>\\001 <<hostname>> <<port>> <<length>> -donde \\002 es un caracter no imprimible que indica que es un privmsg especial que declara que se desea enviar un fichero -los \\001 son tambien caracteres no imprimibles que indican el comienzo y final del nombre del fichero a enviar -<<filename>> es el nombre del fichero a enviar (puede contener espacios) -<<hostname>> es el nombre dns de quien desea enviar el fichero (en adelante, el emisor) -<<port>> es un entero donde se indica el puerto al que el receptor debera conectarse para recibir el fichero -<<length>> es la longitud del fichero una vez que el receptor haya recibido este mensaje, obtendra los datos del mismo y mediante un prompt, el usuario receptor decidira si quiere o no recibir este fichero\&. La respuesta a este prompt se enviara a traves de la conexion declarada en el privmsg (hostname + port) en caso de respuesta negativa, esta conexion se acaba para ambas partes\&. en caso de respuesta afirmativa, el emisor procede a enviar todos los datos del fichero mediante la conexcion declarada por su parte, el receptor reconstruira el fichero con los datos que el emisor envie una vez acabada la transmision, ambas partes cierran la conexion 
.PP
\fBParameters:\fP
.RS 4
\fIargs\fP los argumentos necesarios para que el hilo lleve a cabo el envio del fichero\&. son del tipo 'struct threadSendArgs'
.RE
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP

.PP
Definition at line 1235 of file G-2301-05-P2-xchat2\&.c\&.
.SS "void* whoThread (void *args)"

.PP
Definition at line 419 of file G-2301-05-P2-xchat2\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "\fBpFuncs\fP functs[IRC_MAX_COMMANDS]"

.PP
Definition at line 20 of file G-2301-05-P2-xchat2\&.c\&.
.SS "char* miNick"

.PP
Definition at line 22 of file G-2301-05-P2-xchat2\&.c\&.
.SS "\fBpUserFuncs\fP userFuncts[IRC_MAX_USER_COMMANDS]"

.PP
Definition at line 21 of file G-2301-05-P2-xchat2\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Redes2 from the source code\&.
