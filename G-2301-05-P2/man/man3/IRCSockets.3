.TH "sockets" 3 "Sun May 7 2017" "Redes2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sockets \- 
Funciones que se encargan de manejar sockets
.PP
.PP
 openSocket_TCP
abre un socket TCP
.PP
\fBReturns:\fP
.RS 4
el socket o -1 en caso de que hubiera un fallo
.RE
.PP
.PP
 
.SS "bindSocket_TCP"
enlaza un socket TCP con un puerto a la vez que rellena los campos de la estructura sockaddr_in de serv_addr
.PP
\fBParameters:\fP
.RS 4
\fIsockfd\fP el socket a enlazar 
.br
\fIportno\fP el puerto al que enlazar el socket 
.br
\fIserv_addr\fP la dirección de una estructura sockaddr_in en donde se guardarán los valores relativos a esta conexión
.RE
.PP
\fBReturns:\fP
.RS 4
-1 en caso de error, un numero positivo en otro caso
.RE
.PP
.PP
 
.SS "acceptConnection"
prepara un socket para aceptar una conexión entrante
.PP
\fBParameters:\fP
.RS 4
\fIsockfd\fP el socket que está escuchando conexiones entrantes 
.br
\fIcli_addr\fP la dirección de una estructura sockaddr_in donde se rellenaran los valores relativos al otro extremo de la conexión
.RE
.PP
\fBReturns:\fP
.RS 4
-1 en caso de error y un nuevo socket (valor mayor que 0) en el que se mantendrá la comunicación con el otro extremo
.RE
.PP
.PP
 
.SS "connectTo"
trata de conectarse a un puerto de un host
.PP
\fBParameters:\fP
.RS 4
\fIsockfd\fP el socket que intentará realizar la conexión 
.br
\fIhostname\fP el nombre de la maquina a la que se desea conectarse 
.br
\fIportno\fP el puerto al que se desea conectar
.RE
.PP
\fBReturns:\fP
.RS 4
en caso de error, un valor negativo\&. De lo contrario, un nuevo socket en el que se mantendrá la comunicación con el otro extremo
.RE
.PP
.PP
 
.SS "connectToIP"
trata de conectarse a un puerto de una IP
.PP
\fBParameters:\fP
.RS 4
\fIsockfd\fP el socket que intentará realizar la conexión 
.br
\fIIP\fP la dirección IP en notación estándar a la que conectarse 
.br
\fIportno\fP el puerto al que se desea conectar
.RE
.PP
\fBReturns:\fP
.RS 4
en caso de error, un valor negativo\&. De lo contrario, un nuevo socket en el que se mantendrá la comunicación con el otro extremo
.RE
.PP
.PP
 
.SS "openSocket_UDP"
abre un socket UDP
.PP
\fBReturns:\fP
.RS 4
el socket o -1 en caso de que hubiera un fallo
.RE
.PP
.PP
 
.SS "bindSocket_UDP"
enlaza un socket UDP con un puerto a la vez que rellena los campos de la estructura sockaddr_in de serv_addr
.PP
\fBParameters:\fP
.RS 4
\fIsockfd\fP el socket a enlazar 
.br
\fIportno\fP el puerto al que enlazar el socket 
.br
\fIserv_addr\fP la dirección de una estructura sockaddr_in en donde se guardarán los valores relativos a esta conexión
.RE
.PP
\fBReturns:\fP
.RS 4
-1 en caso de error, un numero positivo en otro caso
.RE
.PP
.PP
 
.SS "getSocketPort"
obtiene el puerto al que ha sido enlazado el socket sockfd y tambien rellena los campos de serv
.PP
\fBParameters:\fP
.RS 4
\fIsockfd\fP el socket (enlazado) del que queremos sacar su puerto 
.br
\fIserv\fP la estructura sockaddr_in en la que se guardan los datos referentes a nuestro extremo de la conexion
.RE
.PP
\fBReturns:\fP
.RS 4
el puerto del socket\&. Si hubo un error, -1
.RE
.PP
.PP
 
.SS "iniAddrUDP"
inicializa correctamente la estructura con datos para una conexion UDP
.PP
\fBParameters:\fP
.RS 4
\fIsi_other\fP la estructura que se inicializara 
.br
\fIport\fP el puerto del otro sistema con el que se desea comunicar 
.br
\fIhostname\fP el hostname del otro sistema con el que se desea comunicar
.RE
.PP
\fBReturns:\fP
.RS 4
-1 si hubo un error, IRC_OK si todo fue bien
.RE
.PP
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for Redes2 from the source code\&.
