.TH "audio" 3 "Sun May 7 2017" "Redes2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
audio \- 
Funciones que se encargan del envio de audio entre clientes IRC
.PP
.PP
 initiateReciever
rutina que se encarga de escribir el audio recibido en el buffer tambien crea un hilo que se encargara de, con cierto retardo, reproducir lo que haya en dicho buffer
.PP
\fBReturns:\fP
.RS 4
NULL
.RE
.PP
.PP
 
.SS "initiateSender"
rutina que se encarga del envio de audio
.PP
\fBReturns:\fP
.RS 4
NULL
.RE
.PP
.PP
 
.SS "canIRead"
funcion que se encarga de comprobar si es posible leer len bytes en el buffer de audio sin 'pasar' la posicion de escritura es decir, evalua si, al leer len bytes, leeriamos mas alla de lo que hay escrito
.PP
\fBParameters:\fP
.RS 4
\fIlen\fP el numero de bytes de distancia a comprobar si podemos o no leer
.RE
.PP
\fBReturns:\fP
.RS 4
0 si no es posible leer len bytes del buffer\&. !0 si lo es
.RE
.PP
.PP
 
.SS "canIWrite"
funcion que se encarga de comprobar si es posible escribir len bytes en el buffer de audio sin 'pasar' la posicion de lectura es decir, evalua si, al escribir len bytes, sobreescribiriamos memoria que aun no ha sido leida
.PP
\fBParameters:\fP
.RS 4
\fIlen\fP el numero de bytes de distancia a comprobar si podemos o no escribir
.RE
.PP
\fBReturns:\fP
.RS 4
0 si no es posible escribir len bytes del buffer\&. !0 si lo es
.RE
.PP
.PP
 
.SS "writeBuffer"
escribe, si es posible, en el buffer a partir de la posición de escritura\&. Si se logro escribir correctamente, se actualiza la posición de escritura del buffer
.PP
\fBParameters:\fP
.RS 4
\fIbuf\fP los bytes a escribir en el buffer 
.br
\fIlen\fP la cantidad de bytes a escribir en el buffer
.RE
.PP
.PP
 
.SS "playBuffer"
reproduce, si es posible, len bytes de audio almacenados en el buffer a partir de la posicion de lectura\&. Ademas, si se logro reproducir correctamente el audio, se actualiza la posicion de lectura del buffer\&. es necesario que los canales de reproduccion hayan sido abiertos previamente\&.
.PP
\fBParameters:\fP
.RS 4
\fIlen\fP el numero de bytes que queremos reproducir
.RE
.PP
.PP
 
.SS "alreadyRecordingQuery"
funcion que devuelve si este cliente ya esta grabando audio o no
.PP
\fBReturns:\fP
.RS 4
TRUE si este cliente ya esta grabando audio\&. FALSE si no lo esta
.RE
.PP
.PP
 
.SS "endAudioTransmission"
funcion que termina la transmision por parte del cliente que envia audio
.PP
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for Redes2 from the source code\&.
